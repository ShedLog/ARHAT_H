Установка библиотеки.

В целом традиционна: распакуйте архив в каталоге ваших скетчей в подкаталог libraries.

В результате, должна получиться следующая иерархия каталогов:

  Arduino       -- это мой каталог скетчей
    libraries   -- подкаталог с библиотеками создается при установке, если нет - создайте сами.
      Arhat     -- подкаталог с этой библиотекой
        arhat.h          -- заголовочный файл для уменьшения размера скетчей и их ускорения.
        arhat.c          -- файл реализации струткур, функций и методов
        arhat_pins2560.h -- файл "распиновки" Ардуино Мега2560. Макросы, преобразующие номер пина куда-то.
        arhat_pins***.h  -- возможны и другие файлы распиновок. Делать по образцу!
        tsc.h            -- заголовочный файл программирования конечных автоматов
        tsc.c            -- файл реализации классов, структур, функций и методов автоматного программирования
        hcsr04.h         -- template-файл библиотеки узв. датчика HCSR-04
        keywords.txt     -- файл подсветки синтаксиса
        help.txt         -- краткое описание "чего и с чем" пользовать или не пользовать ... в разработке.
        ReadMe.txt       -- этот файл.
        ***              -- возможен ещё какой-нибудь мусор из отладки или недоделанного...
        examples         -- подкаталог с примерами использования в скетчах.        

Внимание!
  Если у Вас при запуске скетчей из примеров появляется ошибка типа 'redefine __vector_23()',
то Вам необходимо переименовать файл wiring.c, лежащий в папке Ардуино ...\hardware\..\core. Где он
конкретно лежит - зависит как от Вашей ОС, версии Ардуино ИДЕ, так и от метода установки (в Линукс).
Для Линукс (Ubuntu), надо искать ту версию файла, на которую есть права для правки. Часто рабочая копия
лежит в папке /usr/share/Arduino, а не в папке с программой!
.. где-то работает нормально, а где-то глючит ... на Линуксах это зависит от способа установки Ардуино ИДЕ.

Внимание2!
  Библиотека для уменьшения и ускорения скетчей базируется на макросах, преобразующих типовые названия
функций Wiring в одно-двухкомандные последовательности, за счет того, что номер используемого пина - указан
или явной числовой константой (число) или используется макроопределение из файла arhat_pins***.h
  При указании номера пина в переменной - этот подход НЕ РАБОТАЕТ! Макрос развернется в код, склеивающий
название переменной с текстом макроса и Вы получите сообщение о синтаксических ошибках и только.
  Такой подход имеет место быть, поскольку все пины Ардуино имеют жесткую привязку к своим функциям,
особенно специальным и, соответственно, всегда явно известны при разработке скетчей.
  Желание "сделать файл настроек" - тут избыточно и имеет больше вреда, чем пользы.

Внимание3
  Библиотека (пока) имеет только один файл "распиновки": "arhat_pins2560.h". Он автоматически подключается
согласно выбранному типу процессора вашей платы. Если Вы хотите использовать библиотеку с другим контроллером,
то Вам надо создать собственный файл "распиновки" по этому образцу И добавить в условную компиляцию в файл
"arhat.h" также по образцу в нем. Константу наименования вашего процессора смотрите в файле "io.h" компилятора
(у меня это avr-gcc) или его дочерних файлах.

Внимание4
  Блок "автоматного программирования" подключается отдельно #include "tsc.h" (название от Time State Controller -
Автомат, управляемый состояниями во времени). Его файлы - библиотеки автоматов будут пополняться далее.
  Совместимость библиотеки с кодом Wiring - далее НЕ ПОДДЕРЖИВАЕТСЯ за ненадобностью.