/**
 * "Моргалка" в виде конечного автомата, управляемого таблицей переходов и состояний.
 * 
 * Светодиод - как конечный автомат имеет состояния:
 *     LED_OFF (выключен, ожидание включения)
 *     LED_ON  (включен, ожидание выключения)
 *
 * Событием, изменяющим состояние является счетчик времени.
 * Размер скетча 646 байт, SRAM = 12 байт.
 *
 * Лицензия:
 * 1. Полностью свободное и бесплатное программное обеспечение. В том числе и от претензий.
 * 2. Вы вправе использовать его на свои нужды произвольным образом и на свой риск.
 * 3. Вы не вправе удалять из него строку с тегом @author или изменять её.
 * 4. Изменяя этот файл, Вы вправе дописать свои авторские данные и/или пояснения.
 * 
 * Если Вам это оказалось полезным, то Вы можете по-достоинству оценить мой труд
 * "на свое усмотрение" (напр. кинуть денег на телефон "сколько не жалко")
 * @author Arhat109 arhat109@mail.ru, +7-(951)-388-2793
 */

#include "arhat.h"              // Использовать макросы "компактного кода"
#include "tsc.h"                // Определения методики автоматного программирования тут

#define WAIT_ON         976     // длительность состояния "ожидание выключения" в тиках или ок. 1 сек.
#define WAIT_OFF        976     // длительность состояния "ожидание включения" мсек.

// Методы, состояний КА (номер ноги pinLed=13 -- @see arhat_pins2560.h ):
void to_on(void *_ctrl) { digitalWrite(pinLed, HIGH); }     // .. включаем светодиод, 
void to_off(void *_ctrl){ digitalWrite(pinLed, LOW); }      // .. выключаем светодиод

// Таблица переходов нашего конечного автомата (нумерация с 0!):
const TSC_Step PROGMEM ledTable[] =
{/* command, timeout, next */
   { to_on,   WAIT_ON,  1 }          // 0: "выключен": включить, перейти к состоянию "включен"
  ,{ to_off,  WAIT_OFF, 0 }          // 1: "включен": ждем WAIT_OFF и выключаем, переходим к пред. состоянию.
};

TSC_Control     ledControl;             // тут будем хранить текущие данные этого КА

// используем это для начальной настройки конечного автомата (далее КА)
void setup()
{               
  pinMode(pinLed, OUTPUT);              // ножку светодиода настраиваем как "это выход"
  tsc_init(&ledControl, ledTable, 0);   // добавляем КА и задаем его начальное состояние
}

// просто вызываем выполнение текущего шага КА, если получится.
void loop()
{
  tsc_step( &ledControl );
}