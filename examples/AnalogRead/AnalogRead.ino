/**
 * "Тест работы аналогового чтения".
 * Размер скетча в режиме компиляции _ARHAT_ 1 = 658 байт, SRAM = 4 байта.
 *
 * Это контрольный тет для проверки функции analogRead()
 * Отличия от wiring_analog.c:
 * 1. Созданы макросы отдельной настройки ADC-преобразователя(АЦП) для всех режимов его работы.
 * (здесь проверяется только самый типовой режим: разовая оцифровка сигнала на заданном пине);
 *
 * 2. Отделен макрос настройки АЦП на работу с заданной ногой платы. Актуально только для режимов
 * последовательной, непрерывной оцифровки каналов с использованием прерывания от АЦП (не проверено)
 * 
 * 3. Отделен макрос запуска и остановки АЦП-преобразователя. Позволяет снизить потребление, если он
 * требуется не часто.
 * 
 * Подключение:
 * 1. Потенциометр средним выводом подключается к Аналоговому входу 0. Крайние выводы соединяем
 * с землей и питанием (также как и в типовом AnalogSerialRead)
 * 2. Светодиод, яркостью которого будем управлять подключаем к 44-ноге (5-й таймер).
 * Тоже стандартно через развязку.
 * 3. Кроме этого будет моргать 13-й (встроенный) светодиод, как контроль работы скетча.
 *
 * @author Arhat109 arhat109@mail.ru, +7-(951)-388-2793
 * 
 * Лицензия:
 * 1. Полностью свободное и бесплатное программное обеспечение. В том числе и от претензий.
 * 2. Вы вправе использовать его на свои нужды произвольным образом и на свой риск.
 * 3. Вы не вправе удалять из него строку с тегом @author или изменять её.
 * 4. Изменяя этот файл, Вы вправе дописать свои авторские данные и/или пояснения.
 * 
 * Если Вам это оказалось полезным, то Вы можете по-достоинству оценить мой труд
 * "на свое усмотрение" (напр. кинуть денег на телефон "сколько не жалко")
 */

#define _ARHAT_ 1
#include "arhat.h"

#define blinkWait    150

void blink13(uint8_t wait)                // моргалка встроенным светодиодом
{
  digitalWrite(pinLed, HIGH);
  delay(wait);
  digitalWrite(pinLed, LOW);
  delay(wait);
}

void setup() {
  adcOn();                                // включаем АЦП (ADC)
  pinMode(pinLed, OUTPUT);                // 13 ножка "на выход"
  pwmSet(pin44);                          // 44 ножка - управление яркостью
}

void loop() {
  uint16_t      readedVoltage;

  readedVoltage = analogRead(Analog0);    // читаем напряжение на регуляторе [0..1023]
  analogWrite(pin44, readedVoltage/4 );   // уменьшаем его до диапазона [0..255] и устанавливаем как яркость.
  blink13(150);                           // контрольная моргалка "код работает".
}
